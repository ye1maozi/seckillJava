<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learn.seckill.dao.SkGoodsMapper">
  <resultMap id="BaseResultMap" type="com.learn.seckill.pojo.SkGoods">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_title" jdbcType="VARCHAR" property="goodsTitle" />
    <result column="goods_img" jdbcType="VARCHAR" property="goodsImg" />
    <result column="goods_price" jdbcType="DECIMAL" property="goodsPrice" />
    <result column="goods_stock" jdbcType="INTEGER" property="goodsStock" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
<!--    1对多-->
<!--    <collection property="skGoodsSeckill"  javaType="ArrayList" ofType="com.learn.seckill.pojo.SkGoodsSeckill">-->
<!--      <result property="goodsId" jdbcType="BIGINT" column="goods_id"/>-->
<!--      <result property="seckillPrice" jdbcType="DECIMAL" column="seckill_price"/>-->
<!--      <result property="stockCount" jdbcType="INTEGER" column="stock_count"/>-->
<!--      <result property="startDate" jdbcType="TIMESTAMP" column="start_date"/>-->
<!--      <result property="endDate" jdbcType="TIMESTAMP" column="end_date"/>-->
<!--      <result property="version" jdbcType="INTEGER" column="version"/>-->
<!--    </collection>-->
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.learn.seckill.pojo.SkGoods">
    <result column="goods_detail" jdbcType="LONGVARCHAR" property="goodsDetail" />
  </resultMap>
  <resultMap extends="ResultMapWithBLOBs" id="goodsVo" type="com.learn.seckill.vo.GoodsVo">
    <result property="seckillId" jdbcType="BIGINT" column="sec_id"/>
    <result property="seckillPrice" jdbcType="DECIMAL" column="seckill_price"/>
    <result property="stockCount" jdbcType="INTEGER" column="stock_count"/>
    <result property="startDate" jdbcType="TIMESTAMP" column="start_date"/>
    <result property="endDate" jdbcType="TIMESTAMP" column="end_date"/>
    <result property="version" jdbcType="INTEGER" column="version"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, goods_name, goods_title, goods_img, goods_price, goods_stock, create_time
  </sql>
  <sql id="Blob_Column_List">
    goods_detail
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sk_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sk_goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.learn.seckill.pojo.SkGoods">
    insert into sk_goods (id, goods_name, goods_title, 
      goods_img, goods_price, goods_stock, 
      create_time, goods_detail)
    values (#{id,jdbcType=BIGINT}, #{goodsName,jdbcType=VARCHAR}, #{goodsTitle,jdbcType=VARCHAR}, 
      #{goodsImg,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DECIMAL}, #{goodsStock,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{goodsDetail,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.learn.seckill.pojo.SkGoods">
    insert into sk_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsTitle != null">
        goods_title,
      </if>
      <if test="goodsImg != null">
        goods_img,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsStock != null">
        goods_stock,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="goodsDetail != null">
        goods_detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsTitle != null">
        #{goodsTitle,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsStock != null">
        #{goodsStock,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsDetail != null">
        #{goodsDetail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.learn.seckill.pojo.SkGoods">
    update sk_goods
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsTitle != null">
        goods_title = #{goodsTitle,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        goods_img = #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DECIMAL},
      </if>
      <if test="goodsStock != null">
        goods_stock = #{goodsStock,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="goodsDetail != null">
        goods_detail = #{goodsDetail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.learn.seckill.pojo.SkGoods">
    update sk_goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_title = #{goodsTitle,jdbcType=VARCHAR},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_stock = #{goodsStock,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      goods_detail = #{goodsDetail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learn.seckill.pojo.SkGoods">
    update sk_goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_title = #{goodsTitle,jdbcType=VARCHAR},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DECIMAL},
      goods_stock = #{goodsStock,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select * from sk_goods
  </select>
<!--    所有的物品-->
  <select id="listGoodsVo" resultMap="goodsVo">
    select goods.*,
     seckill.id AS sec_id,
    seckill.seckill_price AS seckill_price,
    seckill.stock_count AS stock_count,
    seckill.start_date AS start_date,
    seckill.end_date AS end_date,
    seckill.version AS version
   from sk_goods goods
   LEFT JOIN sk_goods_seckill seckill on goods.id = seckill.goods_id
  </select>
  <select id="listGoodsVoById" resultMap="goodsVo">
    select goods.*
    <choose>
      <when test="seckillId != null ">
        ,seckill.id AS sec_id,
        seckill.seckill_price AS seckill_price,
        seckill.stock_count AS stock_count,
        seckill.start_date AS start_date,
        seckill.end_date AS end_date,
        seckill.version AS version
        from sk_goods goods , sk_goods_seckill seckill
        where  goods.id = #{goodsId} and seckill.id = #{seckillId} and goods.id = seckill.goods_id
      </when>
      <otherwise>
        from sk_goods goods
        where  goods.id = #{goodsId}
      </otherwise>
    </choose>
  </select>

  <select id="getGoodsVoByGoodsId" resultMap="goodsVo">
    select goods.*
        ,seckill.id AS sec_id,
        seckill.seckill_price AS seckill_price,
        seckill.stock_count AS stock_count,
        seckill.start_date AS start_date,
        seckill.end_date AS end_date,
        seckill.version AS version
        from sk_goods goods , sk_goods_seckill seckill
        where  goods.id = #{goodsId}
  </select>
</mapper>